{{ if eq .chezmoi.os "darwin" -}}

#!/bin/bash

FORMULAE=(
	btop
	chezmoi
	cmake
	cmatrix
	curl
	emacs
	fastfetch
	flac
	flang
	fmt
	fzf
	gcc
	ghcup
	jdtls
	lazygit
	llvm
	lua
	luajit
	luarocks
	meson
	neovim
	nmap
	ollama
	openjdk
	python
	qemu
	ripgrep
	rustup
	starship
	tmux
	tree-sitter
	wget
	xmake
	"zathura --with synctex"
	zathura-mupdf
	zsh-autosuggestions
	zsh-fast-syntax-highlighting
	zoxide
)

CASKS=(
	balenaetcher
	cinebench
	discord
	docker
	eqmac
	font-jetbrains-mono-nerd-font
	ghostty
	gimp
	libreoffice
	mediahuman-audio-converter
	obs
	obsidian
	plexamp
	proton-mail-bridge
	protonvpn
	qbittorrent
	raycast
	signal
	spotify
	steam
	tailscale
	thunderbird
	vlc
	vscodium
	wezterm
	whatsapp
	wireshark
	zen-browser
	zoom
	zotero
)

## Tap required repositories
echo "Tapping required repositories"
brew tap homebrew-zathura/zathura

## Install brew formulae
echo "Installing Brew Formulae..."
brew install --formulae "${FORMULAE[@]}"

## Install brew casks
echo "Installing Brew Casks..."
brew install --cask "${CASKS[@]}"

{{ else if eq .chezmoi.os "linux" -}}

#!/bin/bash

if command -v pacman --version > /dev/null 2>&1; then
	PKGS=(
		btop
		chezmoi
		docker
		emacs
		fastfetch
		fzf
		ghostty
		lazygit
		lua
		luajit
		meson
		neovim
		nmap
		openjdk
		python
		qemu
		ripgrep
		rustup
		starship
		tmux
		tree-sitter
		ttf-jetbrains-mono
		xmake
		zsh-autosuggestions
		zsh-fast-syntax-highlighting
		zoxide
	)

	# Install (AUR) packages
	echo "Performing a full system upgrade"
	yay -Syuq --noconfirm
	echo "Installing packages..."
	yay -Sq --noconfirm "${PKGS[@]}"

	if [ -x /bin/zsh ]; then
		if [[ "$SHELL" != "/bin/zsh" ]]; then
			echo "Changing the shell from $SHELL to /bin/zsh"
			chsh -s /bin/zsh
		fi
	else
		echo "[Error] Cannot find /bin/zsh. Won't change the default shell"
	fi

elif command -v nix --help > /dev/null 2>&1; then
	# Get the current generation number (requires sudo)
	current_gen=$(sudo nix-env --list-generations --profile /nix/var/nix/profiles/system | \
		grep current | awk '{print $1}')

	# Get the date of the current system generation (also requires sudo)
	last_upgrade_date=$(sudo nix-env --profile /nix/var/nix/profiles/system --list-generations | \
		awk -v gen="$current_gen" '$1 == gen {print $2}')

	# Get today's date
	today=$(date +%Y-%m-%d)

	if [[ "$last_upgrade_date" == "$today" ]]; then
		echo "System was already upgraded today ($today). Skipping upgrade."

	else
		echo "Last upgrade was on $last_upgrade_date. Proceeding with upgrade..."
		read -rp "Enter the hostname (flake target): " HOST
		sudo nixos-rebuild switch --flake "/etc/nixos#$HOST" --upgrade

	fi
fi

{{ end -}}
